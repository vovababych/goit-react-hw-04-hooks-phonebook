{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","components/Phonebook/Phonebook.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["module","exports","Phonebook","title","children","className","s","section","ContactForm","onAdd","onCheckforUniqName","useState","name","setName","tel","setTel","reset","form","onSubmit","e","preventDefault","id","uuidv4","alert","label","input","type","value","onChange","target","btnAddContact","Filter","filter","onFilter","Contacts","contacts","onDeleteContact","setFilter","filteredContacts","contact","toLowerCase","includes","contactsList","length","map","phone","btnDeleteContact","onClick","App","setContacts","useEffect","readContacts","JSON","parse","localStorage","getItem","window","setItem","stringify","newContact","prevState","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4453a620.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__8_dbI\",\"label\":\"ContactForm_label__3WUry\",\"input\":\"ContactForm_input__2aazO\",\"btnAddContact\":\"ContactForm_btnAddContact__9a779\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__aabGq\",\"contactsList\":\"Contacts_contactsList__3QSl4\",\"contact\":\"Contacts_contact__1NDBd\",\"name\":\"Contacts_name__TS4-w\",\"phone\":\"Contacts_phone__3vRG_\",\"btnDeleteContact\":\"Contacts_btnDeleteContact__16YvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Phonebook_section__3JIpD\",\"title\":\"Phonebook_title__121Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__c0S41\"};","import PropTypes from 'prop-types';\nimport s from './Phonebook.module.css';\n\nfunction Phonebook({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nPhonebook.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.node),\n};\n\nexport default Phonebook;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onAdd, onCheckforUniqName }) {\n  const [name, setName] = useState('');\n  const [tel, setTel] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeTel = e => {\n    setTel(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const checkUniqName = onCheckforUniqName(name);\n    if (!checkUniqName) return;\n\n    if (!(name && tel)) {\n      alert('Empty field');\n      return;\n    }\n\n    onAdd({ id: uuidv4(), name, tel });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setTel('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"tel\"\n          value={tel}\n          onChange={handleChangeTel}\n        />\n      </label>\n      <button className={s.btnAddContact} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func,\n  onCheckforUniqName: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ filter, onFilter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => onFilter(e.target.value)}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport Filter from '../Filter';\n\nfunction Contacts({ contacts, title, onDeleteContact }) {\n  const [filter, setFilter] = useState('');\n\n  const handleFilter = filter => {\n    setFilter(filter);\n  };\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      <h2 className={s.title}>{title}</h2>\n      <Filter filter={filter} onFilter={handleFilter} />\n      <ul className={s.contactsList}>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(({ id, name, tel }) => (\n            <li key={id} className={s.contact}>\n              <span className={s.name}>{name}</span>\n              <span className={s.phone}>{tel}</span>\n              <button\n                className={s.btnDeleteContact}\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  title: PropTypes.string,\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default Contacts;\n","import { useState, useEffect } from 'react';\n\nimport Phonebook from './components/Phonebook';\nimport ContactForm from './components/ContactForm';\nimport Contacts from './components/Contacts';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  const handleAddContact = newContact => {\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handlerUniqName = name => {\n    const uniqName = !!contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (uniqName) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n    return true;\n  };\n\n  const handleDeleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  useEffect(() => {\n    const readContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (readContacts) {\n      setContacts(readContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Phonebook title=\"Phonebook\">\n      <ContactForm\n        onAdd={handleAddContact}\n        onCheckforUniqName={handlerUniqName}\n      />\n      <Contacts\n        title=\"Contacts\"\n        contacts={contacts}\n        onDeleteContact={handleDeleteContact}\n      />\n    </Phonebook>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}